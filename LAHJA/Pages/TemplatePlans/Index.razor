@page "/TemplatePlan"



@using LAHJA.ClientServices.Auth
@using LAHJA.ClientServices.Plans
@using LAHJA.Components.TemPlansBlazar.FeaturesPlansTem2
@using LAHJA.Data.BlazarComponents.Plans.Category.DataModel
@using LAHJA.Data.BlazarComponents.Plans.TemFeturePlans2.DataModel
@using LAHJA.Token
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.Authorization

@inject NavigationManager Navigation
@inject IDialogService DialogService
@inject ISnackbar Snackbar
@inject ClientPlansService ClientPlansService
@inject ClientAuthService clientAuthService
@inject AuthCheckedService authChecked
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject AppCustomAuthenticationStateProvider AppCustomAuthenticationStateProvider


 
<section>


    <div style="padding:10px!important">

 
        <LAHJA.Components.TemPlansBlazar.Category_Plans_Template.TemListCategorys OnClick="Submit" Params="@dataPlansCategory._listcategories" />
    </div>

    <div style="padding:10px!important">

        <LAHJA.Components.TemPlansBlazar.FeaturesPlansTem1.ListFeature Params="@dataFeature.featureList" OnClick="SubmitListFeature" />
        
    </div>
</section>

 
 
@code
{


    // @attribute[Authorize]


    public  DataPlansCategory dataPlansCategory = new DataPlansCategory();
    public Data.BlazarComponents.Plans.TemFeturePlans1.DataModel.DataFeature dataFeature = new Data.BlazarComponents.Plans.TemFeturePlans1.DataModel.DataFeature();
    public DataFeature dataFeaturee= new DataFeature();


    protected override async Task OnInitializedAsync()
    {

        try
        {

       

            // AppCustomAuthenticationStateProvider.SignOut();
            // var authState = await AuthenticationStateProvider.GetAuthenticationStateAsync();
            // var authState = await AppCustomAuthenticationStateProvider.GetAuthenticationStateAsync();

            // if (authState.User.Identity.IsAuthenticated)
            {


                var result = await ClientPlansService.getAllPlansContainersAsync();

                if (result.Succeeded && result.Data != null)
                {

                    dataPlansCategory._listcategories = result.Data;
                    StateHasChanged();
                }
                else
                {

                }
            }

        }
        catch (Exception e)
        {

        }


    }


    private async void Submit(Data.BlazarComponents.Plans.Category.Model.InputCategory inputCategory)
    {
        if (inputCategory != null)
        {

            await ShowFeatureService(inputCategory);


        }
    }
    private async void SubmitListFeature(LAHJA.Data.BlazarComponents.Plans.TemFeturePlans1.Model.FeaturesPlansTem1 plans)
    {
        if (plans != null)
        {
            Snackbar.Add(plans.ProductName, Severity.Success);
        }
    }
    private async Task ShowFeatureService(Data.BlazarComponents.Plans.Category.Model.InputCategory inputCategory)
    {
        try
        {

            var response = await ClientPlansService.GetPlansGroupAsync();

            if (response.Succeeded)
            {

                // dataPlansCategory._listcategories = ;
                // StateHasChanged();

                var dataList = response.Data.ToList();

                Data.BlazarComponents.Authentication.AuthComponent authComponent = new Data.BlazarComponents.Authentication.AuthComponent() { 
                    Isauth = await authChecked.isAuth(),
                NamePigeLogin="/login" };
                var parameters = new DialogParameters<ListFeatureService>
                {

                    {x => x.TypeTransition,true},
                    {x => x.IdCategry,inputCategory.IdPlans},
                    {x=>x.auth,authComponent},
                    {x =>x.Params,dataList} //dataFeaturee.plansList1}
                };


                var options = new DialogOptions() { CloseButton = true, MaxWidth = MaxWidth.ExtraLarge,FullWidth=true};
                var dialog = await DialogService.ShowAsync<ListFeatureService>("",parameters, options);
                var result = await dialog.Result;
                if (!result.Canceled)
                {
                    var pbj =(Data.BlazarComponents.Plans.TemFeturePlans2.Model.PlansFeture)result.Data;
                    Snackbar.Add(pbj.Name, Severity.Error);
                }
            }
            else
            {
                throw new Exception(response?.Messages[0]??"");
            }

            
        }
        catch (Exception ex)
        {
            Snackbar.Add(ex.Message, Severity.Error);
        }


    }

}